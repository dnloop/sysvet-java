package model;
// Generated Feb 11, 2019 1:52:34 PM by Hibernate Tools 5.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * FichasClinicas generated by hbm2java
 */
public class FichasClinicas extends BaseModel {

    /**
     *
     */
    private static final long serialVersionUID = -2357760413746833349L;
    private Integer id;
    @NotNull(message = "El campo 'pacientes' es requerido.")
    private Pacientes pacientes;
    @NotNull(message = "El campo 'fecha' es requerido.")
    private Date fecha;
    @NotEmpty(message = "El campo 'motivo de consulta' es requerido.")
    @Size(max = 500, message = "El campo 'motivo de consulta' no debe ser mayor a {max} caracteres.")
    private String motivoConsulta;
    @Size(max = 500, message = "El campo 'anamnesis' no debe ser mayor a {max} caracteres.")
    private String anamnesis;
    @Size(max = 500, message = "El campo 'medicación' no debe ser mayor a {max} caracteres.")
    private String medicacion;
    @Size(max = 500, message = "El campo 'estado de nutrición' no debe ser mayor a {max} caracteres.")
    private String estadoNutricion;
    @Size(max = 500, message = "El campo 'estado sanitario' no debe ser mayor a {max} caracteres.")
    private String estadoSanitario;
    @Size(max = 500, message = "El campo 'aspecto general' no debe ser mayor a {max} caracteres.")
    private String aspectoGeneral;
    @Size(max = 500, message = "El campo 'determinaciones diagnósticas complementarias' no debe ser mayor a {max} caracteres.")
    private String deterDiagComp;
    @Size(max = 500, message = "El campo no 'derivaciones' debe ser mayor a {max} caracteres.")
    private String derivaciones;
    @Size(max = 500, message = "El campo 'pronóstico' no debe ser mayor a {max} caracteres.")
    private String pronostico;
    @Size(max = 500, message = "El campo 'diagnóstico' no debe ser mayor a {max} caracteres.")
    private String diagnostico;
    @Size(max = 500, message = "El campo 'exploración' no debe ser mayor a {max} caracteres.")
    private String exploracion;
    @Size(max = 500, message = "El campo 'evolución' no debe ser mayor a {max} caracteres.")
    private String evolucion;
    private boolean deleted;
    private Date createdAt;
    private Date updatedAt;
    private Date deletedAt;
    private Set<HistoriaClinica> historiaClinicas = new HashSet<HistoriaClinica>(0);
    private Set<Tratamientos> tratamientoses = new HashSet<Tratamientos>(0);

    public FichasClinicas() {
    }

    public FichasClinicas(Pacientes pacientes, String motivoConsulta, boolean deleted) {
        this.pacientes = pacientes;
        this.motivoConsulta = motivoConsulta;
        this.deleted = deleted;
    }

    public FichasClinicas(Pacientes pacientes, String motivoConsulta, String anamnesis, String medicacion,
            String medicacionAnterior, String estadoNutricion, String estadoSanitario, String aspectoGeneral,
            String deterDiagComp, String derivaciones, String pronostico, String diagnostico, String exploracion,
            String evolucion, Date createdAt, Date updatedAt, Date deletedAt, Set<Internaciones> internacioneses,
            boolean deleted, Set<ExamenGeneral> examenGenerals, Set<HistoriaClinica> historiaClinicas,
            Set<Tratamientos> tratamientoses) {
        this.pacientes = pacientes;
        this.motivoConsulta = motivoConsulta;
        this.anamnesis = anamnesis;
        this.medicacion = medicacion;
        this.estadoNutricion = estadoNutricion;
        this.estadoSanitario = estadoSanitario;
        this.aspectoGeneral = aspectoGeneral;
        this.deterDiagComp = deterDiagComp;
        this.derivaciones = derivaciones;
        this.pronostico = pronostico;
        this.diagnostico = diagnostico;
        this.exploracion = exploracion;
        this.evolucion = evolucion;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.deletedAt = deletedAt;
        this.historiaClinicas = historiaClinicas;
        this.deleted = deleted;
    }

    @Override
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Pacientes getPacientes() {
        return this.pacientes;
    }

    public void setPacientes(Pacientes pacientes) {
        this.pacientes = pacientes;
    }

    public String getMotivoConsulta() {
        return this.motivoConsulta;
    }

    public void setMotivoConsulta(String motivoConsulta) {
        this.motivoConsulta = motivoConsulta;
    }

    public String getAnamnesis() {
        return this.anamnesis;
    }

    public void setAnamnesis(String anamnesis) {
        this.anamnesis = anamnesis;
    }

    public String getMedicacion() {
        return this.medicacion;
    }

    public void setMedicacion(String medicacion) {
        this.medicacion = medicacion;
    }

    public String getEstadoNutricion() {
        return this.estadoNutricion;
    }

    public void setEstadoNutricion(String estadoNutricion) {
        this.estadoNutricion = estadoNutricion;
    }

    public String getEstadoSanitario() {
        return this.estadoSanitario;
    }

    public void setEstadoSanitario(String estadoSanitario) {
        this.estadoSanitario = estadoSanitario;
    }

    public String getAspectoGeneral() {
        return this.aspectoGeneral;
    }

    public void setAspectoGeneral(String aspectoGeneral) {
        this.aspectoGeneral = aspectoGeneral;
    }

    public String getDeterDiagComp() {
        return this.deterDiagComp;
    }

    public void setDeterDiagComp(String deterDiagComp) {
        this.deterDiagComp = deterDiagComp;
    }

    public String getDerivaciones() {
        return this.derivaciones;
    }

    public void setDerivaciones(String derivaciones) {
        this.derivaciones = derivaciones;
    }

    public String getPronostico() {
        return this.pronostico;
    }

    public void setPronostico(String pronostico) {
        this.pronostico = pronostico;
    }

    public String getDiagnostico() {
        return this.diagnostico;
    }

    public void setDiagnostico(String diagnostico) {
        this.diagnostico = diagnostico;
    }

    public String getExploracion() {
        return this.exploracion;
    }

    public void setExploracion(String exploracion) {
        this.exploracion = exploracion;
    }

    public String getEvolucion() {
        return this.evolucion;
    }

    public void setEvolucion(String evolucion) {
        this.evolucion = evolucion;
    }

    @Override
    public boolean isDeleted() {
        return this.deleted;
    }

    @Override
    public void setDeleted(boolean deleted) {
        this.deleted = deleted;
    }

    @Override
    public Date getCreatedAt() {
        return this.createdAt;
    }

    @Override
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @Override
    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    @Override
    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public Date getDeletedAt() {
        return this.deletedAt;
    }

    @Override
    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    public Set<HistoriaClinica> getHistoriaClinicas() {
        return this.historiaClinicas;
    }

    public void setHistoriaClinicas(Set<HistoriaClinica> historiaClinicas) {
        this.historiaClinicas = historiaClinicas;
    }

    public Set<Tratamientos> getTratamientoses() {
        return this.tratamientoses;
    }

    public void setTratamientoses(Set<Tratamientos> tratamientoses) {
        this.tratamientoses = tratamientoses;
    }

    @Override
    public String toString() {
        return pacientes.getNombre() + " (" + motivoConsulta + ")";
    }

    public Date getFecha() {
        return fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

}
